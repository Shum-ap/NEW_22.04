    1  git
    2  git --version
    3  cd
    4  ssh-keygen
    5  cat ./ssh/id_
    6  ls -la
    7  cat .ssh/id_rsa.pub
    8  ssh ec2-user@linux.itcareerhub.de
    9  ssh ec2-user@linux.itcareerhub.de
   10  с
   11  ssh ec2-user@linux.itcareerhub.de
   12  ssh ec2-user@linux.itcareerhub.de
   13  linux.itcareerhub.de
   14  ec2-user@linux.itcareerhub.de
   15  exit
   16  ec2-user@linux.itcareerhub.de
   17  cd
   18  cd ec2-user@linux.itcareerhub.de
   19  ls
   20  ec2-user@linux.itcareerhub.de
   21  ssh ec2-user@linux.itcareerhub.de
   22  св
   23  св
   24  cd
   25  ssh ec2-user@linux.itcareerhub.de
   26  ssh ec2-user@linux.itcareerhub.de
   27  ssh ec2-user@linux.itcareerhub.de
   28  cd
   29  mkdir -p linux
   30  cd linux/
   31  ls
   32  echo "# linux" >> README.md
   33  ls
   34  git init
   35  git status
   36  git add .
   37  git status
   38  git commit -m "first commit"
   39  git config --global user.email "apet5685@gmail.com"
   40  git config --global user.name "Shum-ap"
   41  git status
   42  git commit -m "first commit"
   43  git status
   44  git branch -M main
   45  history
   46  git remote add origin git@github.com:Shum-ap/linux.git
   47  git push -u origin main
   48  mkdir -p HW_10
   49  cd HW_10/
   50  touch new
   51  cd ..
   52  mkdir -p HW_11
   53  git status
   54  git add .
   55  git status
   56  git commit -m "new"
   57  git push
   58  ls -la
   59  git loc
   60  git log
   61  history
   62  ls
   63  mkdir -p git_intro
   64  ls
   65  git init
   66  ls -la
   67  git status
   68  git add .
   69  git commit -m "Added photo"
   70  cd git_intro
   71  cd
   72  cd git_intro/
   73  git init
   74  git add .
   75  git commit -m "Added photo"
   76  git branch -M main
   77  git config --global user.email "apet5685@gmail.com"
   78  git config --global user.name "Shum-ap"
   79  git status
   80  git remote add origin git@github.com:Shum-ap/linux.git
   81  git push -u origin main
   82  git remote add origin git@github.com:Shum-ap/git_intro.git
   83  git remote add origin git@github.com:Shum-ap/git_intro.git
   84  git status
   85  history
   86  ls -la
   87  git init
   88  git add .
   89  git status
   90  echo "# git_intro" >> README.md
   91  git status
   92  git init
   93  git add README.md
   94  git add .
   95  git commit -m "Added_photo"
   96  git branch -M main
   97  git remote add origin git@github.com:Shum-ap/git_intro.git
   98  git puch
   99  git status
  100  git push -u origin main
  101  git remote add origin git@github.com:Shum-ap/git_intro.git
  102  git branch -M main
  103  git push -u origin main
  104  ls
  105  nano README.md 
  106  git status
  107  git commit -m "Added_photo_1"
  108  git push -u origin main
  109  ls -la
  110  git puch --force
  111  history
  112  git remote -v
  113  ls
  114  cd
  115  ls -la
  116  tree
  117  cd git_intro/
  118  ls -la
  119  git push --force
  120  git status
  121  git add .
  122  git status
  123  ls -la
  124  git init
  125  git remote add origin git@github.com:Shum-ap/git_intro.git
  126  cd
  127  mkdir -p git_intro
  128  mkdir -p git_intro_1
  129  mkdir -p git_intro
  130  cd git_intro/
  131  git init
  132  git status
  133  git add .
  134  git status
  135  git commit -m "Added_photo"
  136  git branch -M main
  137  git remote add origin git@github.com:Shum-ap/git_intro.git
  138  git push -u origin main
  139  exit
  140  pwd
  141  find --help
  142  ls -l
  143  ssh  ec2-user@linux.itcareerhub.de
  144  ssh  ec2-user@linux.itcareerhub.de
  145  cd 08.04/
  146  git log --oneline --graph --all --decorate
  147  git log --oneline --graph --all --decorate
  148  ssh ec2-user@linux.itcareerhub.de
  149  ssh ec2-user@linux.itcareerhub.de
  150  exit
  151  ssh ec2-user@linux.itcareerhub.de
  152  mkdir git-merge-vs-rebase
  153  cd git-merge-vs-rebase
  154  git init
  155  gim branch -M main
  156  git branch -M main
  157  echo "Привет, мир!" > file.txt
  158  git add file.txt
  159  git commit -m "init first commit file.txt"
  160  git-merge-vs-rebase % git checkout -b feature
  161  git checkout -b feature
  162  echo " feature 1 " >> file.txt
  163  git commit -am "feat: добавлена первая фича"
  164  echo " feature 2 " >> file.txt
  165  git commit -am "feat: добавлена вторая фича"
  166  git branch
  167  git checkout main
  168  git branch
  169  echo " feature 5 " >> file.txt
  170  git commit -am "feat: добавлена третья фича"
  171  git status
  172  git merge feature
  173  git status
  174  nano file.txt
  175  git log --oneline --graph --all
  176  git commit -am "объеденили ветки"
  177  git log --oneline --graph --all
  178  cd
  179  ls -la
  180  mkdir git-conflict-demo
  181  cd git-conflict-demo
  182  git init
  183  git branch -M main
  184  echo "Привет, мир!" > file.txt
  185  ls 
  186  git status
  187  git commit -m "init: добавлен приветственный текст"
  188  git add file.txt
  189  git commit -m "init: добавлен приветственный текст"
  190  git checkout -b feature
  191  echo "Эта строка добавлена в ветке feature" >> file.txt
  192  git status
  193  git commit -am "добавлена строка в ветке фиче"
  194  git checkout main
  195  echo "text" >> file.txt
  196  git add file.txt
  197  git commit -m "добавлен text"
  198  git merge feature
  199  git status
  200  nano file.txt
  201  git merge feature
  202  git status
  203  git add file.txt
  204  git status
  205  git commit -m "merge : решили конфликт и соеденили две ветки"
  206  git дщп --oneline
  207  git log --oneline
  208  git log --oneline --graf
  209  git log --oneline --graph
  210  git log --oneline decorate--graph
  211  git log --oneline --decorate --graph
  212  git log --oneline --decorate
  213  git log --oneline --graph
  214  git reset --hard HEAD~1
  215  git checkout feature
  216  git rease main
  217  git rebase main
  218  git status
  219  nano file.txt
  220  git add file.txt
  221  git status
  222  git rebase --continue
  223  echo "что нибудь" >> test.txt
  224  ls
  225  echo "что нибудь" > test.txt
  226  ls
  227  echo "что нибудь" > test1.txt
  228  ls
  229  echo  > test2.txt
  230  ls
  231  git add.
  232  git status
  233  git add .
  234  git status
  235  git log
  236  git commit --amend
  237  git status
  238  git status
  239  git log —oneline
  240  git reset --soft HEAD~1
  241  git status
  242  git log —-oneline
  243  git log --oneline
  244  git commit -m "last update"
  245  git reset --mixed HEAD~1
  246  git log --oneline
  247  git status
  248  git add .
  249  git commit -m "last update"
  250  git status
  251  ls -l
  252  git checkout main
  253  ls
  254  echo "kskdjvlskvjn" >> file.txt 
  255  git status
  256  git add .
  257  git status
  258  git checkout -- file
  259  git checkout -- file.txt
  260  git status
  261  cat file.txt
  262  git commit -m "last "
  263  git checkout -- file.txt
  264  git commit -m "last "
  265  cat file.txt
  266  git commit -m "last "
  267  git checkout -- file.txt
  268  cat file.txt
  269  echo "ksk8777999" >> file.txt 
  270  cat file.txt
  271  git checkout -- file.txt
  272  cat file.txt
  273  echo "ksk8777999" >> file.txt 
  274  git add .
  275  git status
  276  git rm --cached file.txt 
  277  git status
  278  git log --oneline
  279  git revert 3594753
  280  git stage
  281  git revert 3594753
  282  git stage
  283  git add .
  284  git stage
  285  git revert 3594753
  286  git add .
  287  git revert 3594753
  288  git status
  289  nano .gitignore
  290  git commit -am "added git ignore"
  291  touch 1.jpg
  292  git status
  293  git log --oneline
  294  git add .
  295  git status
  296  git commit -am "added git ignore 2"
  297  git remote add origin git@github.com:Shum-ap/git-conflict-demo.git
  298  git remote -v
  299  git push -u origin main
  300  exit
  301  nano NEW_22.04
  302  nano NEW_22.04
  303  chmod +x NEW_22.04.sh
  304  ./NEW_22.04.sh
  305  nano NEW_22.04
  306  ./NEW_22.04.sh
  307  chmod 744 NEW_22.04.sh
  308  chmod 744 NEW_22.04.sh
  309  ls -la
  310  git clone https://github.com/Shum-ap/NEW_22.04
  311  cd my-new-repo
  312  nano NEW_22.04
  313  ./NEW_22.04.sh
  314  git clone git@github.com:Shum-ap/NEW_22.04.git
  315  git clone git@github.com:Shum-ap/NEW_22.04.git
  316  nano NEW_22.04
  317  ./NEW_22.04.sh
  318  git clone git@github.com:Shum-ap/NEW_22.04.sh.git
  319  rm -rf NEW_22.04
  320  rm -rf NEW_22.04.sh
  321  ./NEW_22.04.sh
  322  ls
  323  echo NEW_22.04.sh
  324  ls -la
  325  touch NEW_22.04.sh
  326  ls -la
  327  git clone git@github.com:Shum-ap/NEW_22.04.sh.git
  328  cd /NEW_22.04.sh
  329  hisyory
  330  history
  331  rm -rf NEW_22.04.sh
  332  mkdir home_work_12
  333  cd home_work_12
  334  git clone git@github.com:Shum-ap/NEW_22.04.sh.git
  335  ls -la
  336  ./NEW_22.04.sh
  337  ls
  338  cd NEW_22.04.sh/
  339  ./NEW_22.04.sh
  340  cd
  341  cd home_work_12
  342  ls -la
  343  rm -rf NEW_22.04.sh
  344  ls -la
  345  cd
  346  cd home_work_12
  347  git clone git@github.com:Shum-ap/NEW_22.04.git
  348  cd NEW_22.04/
  349  git clone git@github.com:Shum-ap/NEW_22.04.git
  350  git checkout -b feature
  351  echo "my project" >> README.md
  352  echo "my project 1" >> README.md
  353  echo "my project 1-1" >> README_1.md
  354  echo ".env" >> .gitignore
  355  echo ".ttt" >> .gitignore
  356  echo ".fff" >> .gitignore
  357  ls -la
  358  git add README.md README_1.md .gitignore
  359  git status
  360  git add .
  361  git status
  362  git commit -m "Эксперимент feature"
  363  git push -u origin feature
  364  git commit --amend -m "Experiment Feature"
  365  git push --force
  366  git commit --amend -m " AMMEND Experiment Feature"
  367  git checkout main
  368  git checkout feature
  369  git push --force
  370  git checkout main
  371  git checkout main
  372  git status
  373  git push --force
  374  git checkout main
  375  git push -u origin feature
  376  git checkout main
  377  git branch
  378  ls -la
  379  cd home_work_12
  380  ls
  381  cd NEW_22.04/
  382  git branch -a
  383  git checout -b main
  384  git checkout main
  385  git checkout -b main
  386* 
  387  git pull origin main --allow-unrelated-histories
  388  git push -u origin main
  389  git push -u origin main --force
  390  git branch -a
  391  git status
  392  nano .gitignore
  393  git add .gitignore
  394  git commit -m " NEW MAIN"
  395  git push  origin main
  396  git push -u origin main
  397  git checkout main
  398  git checkout feature
  399  git status
  400  git push -u origin feature
  401  git merge feature
  402  git checkout main
  403  git pull
  404  gitmerge feature
  405  git merge feature
  406  git push
  407  history >> history.txt
